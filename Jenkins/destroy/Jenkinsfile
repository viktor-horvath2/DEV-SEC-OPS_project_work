pipeline {
    agent any
    stages {
        stage('Destroy-Infra'){ 
            steps {
                input 'Destroy Infra?'
                withCredentials([string(credentialsId: 'ARM_CLIENT_ID', variable: 'ARM_CLIENT_ID'),
                                string(credentialsId: 'ARM_CLIENT_SECRET', variable: 'ARM_CLIENT_SECRET'),
                                string(credentialsId: 'ARM_SUBSCRIPTION_ID', variable: 'ARM_SUBSCRIPTION_ID'),
                                string(credentialsId: 'ARM_TENANT_ID', variable: 'ARM_TENANT_ID')]) {
                    dir('/var/jenkins_home/workspace/AZ_test@2/Azure-Infra-TF/02_resources') {
                        sh script: ''' set +x
                                ../../terraform destroy \
                                                    -auto-approve \
                                                    -var="arm_client_id=$ARM_CLIENT_ID" \
                                                    -var="arm_client_secret=$ARM_CLIENT_SECRET" \
                                                    -var="arm_subscription_id=$ARM_SUBSCRIPTION_ID" \
                                                    -var="arm_tenant_id=$ARM_TENANT_ID" || true
                                echo "Cleaning up resources directory."
                                rm -rf .terraform* *.tfplan terraform.tfstate* || true
                            '''
                    }
                }
            }
        }
        stage('Destroy-Backend'){
            steps {
                input 'Destroy backend?'
                withCredentials([string(credentialsId: 'ARM_CLIENT_ID', variable: 'ARM_CLIENT_ID'),
                                string(credentialsId: 'ARM_CLIENT_SECRET', variable: 'ARM_CLIENT_SECRET'),
                                string(credentialsId: 'ARM_SUBSCRIPTION_ID', variable: 'ARM_SUBSCRIPTION_ID'),
                                string(credentialsId: 'ARM_TENANT_ID', variable: 'ARM_TENANT_ID')]) {
                    dir('/var/jenkins_home/workspace/AZ_test@2/Azure-Infra-TF/01_remote_backend') {
                        sh script: ''' set +x
                                ../../terraform destroy \
                                -auto-approve \
                                -var="arm_client_id=$ARM_CLIENT_ID" \
                                -var="arm_client_secret=$ARM_CLIENT_SECRET" \
                                -var="arm_subscription_id=$ARM_SUBSCRIPTION_ID" \
                                -var="arm_tenant_id=$ARM_TENANT_ID"
                                echo "Cleaning up backend directory."
                                rm -rf .terraform* backend.tfplan terraform.tfstate* ../02_resources/config.tfbackend
                            '''
                    }
                }
            }
        }
    }
}